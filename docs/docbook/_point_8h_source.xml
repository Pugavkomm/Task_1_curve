<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__point_8h_source" xml:lang="en-US">
<title>Point.h</title>
<indexterm><primary>Point.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
5 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
6 <emphasis role="preprocessor">#ifndef&#32;POINT</emphasis>
7 <emphasis role="preprocessor">#define&#32;POINT</emphasis>
8 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
9 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_consts_8h">consts.h</link>&quot;</emphasis>
10 <emphasis role="preprocessor">#include&#32;&lt;stdexcept&gt;</emphasis>
11 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
12 <emphasis role="preprocessor">#include&#32;&lt;array&gt;</emphasis>
19 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_curves">Curves</link>
20 {
25 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;
26 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_curves_1_1_point">Point</link>
27 &#32;&#32;&#32;&#32;{
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::array&lt;T,&#32;DIM&gt;&#32;<link linkend="_class_curves_1_1_point">point</link>;
33 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___curves_1ga48f5ad3fb47ee313d4e98e442690af39">Point</link>();
39 
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___curves_1ga48f5ad3fb47ee313d4e98e442690af39">Point</link>(<emphasis role="keyword">const</emphasis>&#32;std::array&lt;T,&#32;DIM&gt;&#32;&amp;<link linkend="_class_curves_1_1_point">point</link>);
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___curves_1ga48f5ad3fb47ee313d4e98e442690af39">Point</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_curves_1_1_point">Point&lt;T&gt;</link>&#32;&amp;other);
51 
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___curves_1ga7f6f8f05a8ec4ad0700541eb462f22f4">setPoint</link>(<emphasis role="keyword">const</emphasis>&#32;std::array&lt;T,&#32;DIM&gt;&#32;&amp;<link linkend="_class_curves_1_1_point">point</link>);
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_curves_1_1_point">Point&lt;T&gt;</link>&#32;operator+(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_curves_1_1_point">Point&lt;T&gt;</link>&#32;&amp;right);
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_curves_1_1_point">Point&lt;T&gt;</link>&#32;operator*(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_curves_1_1_point">Point&lt;T&gt;</link>&#32;&amp;right);
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_curves_1_1_point">Point&lt;T&gt;</link>&#32;operator*(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;right);
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_curves_1_1_point">Point&lt;T&gt;</link>&amp;&#32;operator=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_curves_1_1_point">Point&lt;T&gt;</link>&#32;&amp;right);
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;&#32;<emphasis role="keyword">typename</emphasis>&#32;U&#32;&gt;
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;std::ostream&#32;&amp;&#32;operator&#32;&lt;&lt;&#32;(std::ostream&#32;&amp;out,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_curves_1_1_point">Point&lt;U&gt;</link>&#32;&amp;p);
63 
64 &#32;&#32;&#32;&#32;};
65 }
66 <emphasis role="preprocessor">#endif</emphasis>
67 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_curves">Curves</link>{
68 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
69 &#32;&#32;&#32;&#32;<link linkend="_group___curves_1ga48f5ad3fb47ee313d4e98e442690af39">Point&lt;T&gt;::Point</link>(){}
70 
71 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
72 &#32;&#32;&#32;&#32;<link linkend="_group___curves_1ga48f5ad3fb47ee313d4e98e442690af39">Point&lt;T&gt;::Point</link>(<emphasis role="keyword">const</emphasis>&#32;std::array&lt;T,&#32;DIM&gt;&#32;&amp;<link linkend="_class_curves_1_1_point">point</link>)
73 &#32;&#32;&#32;&#32;{
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;point&#32;=&#32;<link linkend="_class_curves_1_1_point">point</link>;
75 &#32;&#32;&#32;&#32;}
76 
77 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
78 &#32;&#32;&#32;&#32;<link linkend="_group___curves_1ga48f5ad3fb47ee313d4e98e442690af39">Point&lt;T&gt;::Point</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_curves_1_1_point">Point&lt;T&gt;</link>&#32;&amp;other):&#32;<link linkend="_class_curves_1_1_point">point</link>(other.<link linkend="_class_curves_1_1_point">point</link>)&#32;
79 &#32;&#32;&#32;&#32;{}
80 
81 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
82 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___curves_1ga7f6f8f05a8ec4ad0700541eb462f22f4">Point&lt;T&gt;::setPoint</link>(<emphasis role="keyword">const</emphasis>&#32;std::array&lt;T,&#32;DIM&gt;&#32;&amp;<link linkend="_class_curves_1_1_point">point</link>){
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;point&#32;=&#32;<link linkend="_class_curves_1_1_point">point</link>;
84 &#32;&#32;&#32;&#32;}
85 
86 
87 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
88 &#32;&#32;&#32;&#32;<link linkend="_class_curves_1_1_point">Point&lt;T&gt;</link>&#32;<link linkend="_class_curves_1_1_point">Point&lt;T&gt;::operator+</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_curves_1_1_point">Point&lt;T&gt;</link>&#32;&amp;right){
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::array&lt;T,&#32;DIM&gt;&#32;out;
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;DIM;&#32;++i){
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i]&#32;=&#32;<link linkend="_class_curves_1_1_point">point</link>[i]&#32;+&#32;right.point[i];
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
94 &#32;&#32;&#32;&#32;}
95 
96 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
97 &#32;&#32;&#32;&#32;Point&lt;T&gt;&#32;Point&lt;T&gt;::operator*(<emphasis role="keyword">const</emphasis>&#32;Point&lt;T&gt;&#32;&amp;right){
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::array&lt;T,&#32;DIM&gt;&#32;out;
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;DIM;&#32;++i){
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i]&#32;=&#32;<link linkend="_class_curves_1_1_point">point</link>[i]&#32;*&#32;right.point[i];
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
103 &#32;&#32;&#32;&#32;}
104 
105 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
106 &#32;&#32;&#32;&#32;Point&lt;T&gt;&#32;Point&lt;T&gt;::operator*(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;right){
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::array&lt;T,&#32;DIM&gt;&#32;out;
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;DIM;&#32;++i){
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i]&#32;=&#32;<link linkend="_class_curves_1_1_point">point</link>[i]&#32;*&#32;right;
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
112 &#32;&#32;&#32;&#32;}
113 
114 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
115 &#32;&#32;&#32;&#32;Point&lt;T&gt;&amp;&#32;Point&lt;T&gt;::operator=(<emphasis role="keyword">const</emphasis>&#32;Point&lt;T&gt;&#32;&amp;right){
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_curves_1_1_point">point</link>&#32;=&#32;right.point;
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
119 &#32;&#32;&#32;&#32;}
120 
121 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
122 &#32;&#32;&#32;&#32;std::ostream&#32;&amp;&#32;operator&#32;&lt;&lt;&#32;(std::ostream&#32;&amp;out,&#32;<emphasis role="keyword">const</emphasis>&#32;Point&lt;T&gt;&#32;&amp;p)
123 {
124 &#32;&#32;&#32;&#32;out&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;(&apos;</emphasis>;
125 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;DIM;&#32;++i){
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;&lt;&lt;&#32;p.point[i];
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&lt;&#32;DIM&#32;-&#32;1)
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>;
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
130 &#32;&#32;&#32;&#32;out&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;)&apos;</emphasis>;
131 &#32;&#32;&#32;&#32;
132 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
133 }
134 
135 }
</programlisting></section>
