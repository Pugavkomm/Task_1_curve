<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="_point_8h" local="yes">Point.h</includes>
    <includes refid="_curve_8h" local="yes">Curve.h</includes>
    <includes refid="_line_8h" local="yes">Line.h</includes>
    <includes refid="_ellipse_8h" local="yes">Ellipse.h</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="9">
        <label>cmath</label>
      </node>
      <node id="5">
        <label>stdexcept</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="3">
        <label>Point.h</label>
        <link refid="_point_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="1">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="8">
        <label>Curve.h</label>
        <link refid="_curve_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Ellipse.h</label>
        <link refid="_ellipse_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Line.h</label>
        <link refid="_line_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>consts.h</label>
        <link refid="consts_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="main_8cpp_1aeb9c2b853c6641432cdd6a578d07a6ca" prot="public" static="no">
        <type><ref refid="class_curves_1_1_curve" kindref="compound">Curves::Curve</ref>&lt; double &gt;</type>
        <definition>using shape =  Curves::Curve&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mech/projects/cadexcharnger/Task_1_curve/src/main.cpp" line="8" column="1" bodyfile="/home/mech/projects/cadexcharnger/Task_1_curve/src/main.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="main_8cpp_1a90e1e7a7db1a80bca8299c990aa2e56b" prot="public" static="no">
        <type><ref refid="class_curves_1_1_line" kindref="compound">Curves::Line</ref>&lt; double &gt;</type>
        <definition>using line =  Curves::Line&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mech/projects/cadexcharnger/Task_1_curve/src/main.cpp" line="9" column="1" bodyfile="/home/mech/projects/cadexcharnger/Task_1_curve/src/main.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="main_8cpp_1ac0e29e7ace07aba75b874eac32e4c3f4" prot="public" static="no">
        <type><ref refid="class_curves_1_1_ellipse" kindref="compound">Curves::Ellipse</ref>&lt; double &gt;</type>
        <definition>using ellipse =  Curves::Ellipse&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>ellipse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mech/projects/cadexcharnger/Task_1_curve/src/main.cpp" line="10" column="1" bodyfile="/home/mech/projects/cadexcharnger/Task_1_curve/src/main.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="main_8cpp_1ad2ac61982e65db6a64fdc80bc94fe295" prot="public" static="no">
        <type><ref refid="class_curves_1_1_point" kindref="compound">Curves::Point</ref>&lt; double &gt;</type>
        <definition>using point =  Curves::Point&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>point</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mech/projects/cadexcharnger/Task_1_curve/src/main.cpp" line="11" column="1" bodyfile="/home/mech/projects/cadexcharnger/Task_1_curve/src/main.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mech/projects/cadexcharnger/Task_1_curve/src/main.cpp" line="13" column="5" bodyfile="/home/mech/projects/cadexcharnger/Task_1_curve/src/main.cpp" bodystart="13" bodyend="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_point_8h" kindref="compound">Point.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_curve_8h" kindref="compound">Curve.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Line.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Ellipse.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_curves_1_1_curve" kindref="compound">shape</ref><sp/>=<sp/><ref refid="class_curves_1_1_curve" kindref="compound">Curves::Curve&lt;double&gt;</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_curves_1_1_line" kindref="compound">line</ref><sp/>=<sp/><ref refid="class_curves_1_1_line" kindref="compound">Curves::Line&lt;double&gt;</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_curves_1_1_ellipse" kindref="compound">ellipse</ref><sp/>=<sp/><ref refid="class_curves_1_1_ellipse" kindref="compound">Curves::Ellipse&lt;double&gt;</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_curves_1_1_point" kindref="compound">point</ref><sp/>=<sp/><ref refid="class_curves_1_1_point" kindref="compound">Curves::Point&lt;double&gt;</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;shape*&gt;<sp/>curves_vector;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_of_curves<sp/>=<sp/>20;<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>parameter<sp/>=<sp/>M_PI;<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_curves_1_1_point" kindref="compound">point</ref><sp/>o(2,<sp/>5);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_curves_1_1_point" kindref="compound">point</ref><sp/>d(3,<sp/>2);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_curves_1_1_line" kindref="compound">line</ref><sp/>l(o,<sp/>d);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_curves_1_1_ellipse" kindref="compound">ellipse</ref><sp/>e<sp/>(o,<sp/>d);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>l.get_origin()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>l.point_per_parameter(parameter)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>l.derivative(parameter)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>e.point_per_parameter(parameter)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>e.derivative(parameter)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mech/projects/cadexcharnger/Task_1_curve/src/main.cpp"/>
  </compounddef>
</doxygen>
